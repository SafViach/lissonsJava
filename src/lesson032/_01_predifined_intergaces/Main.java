package lesson032._01_predifined_intergaces;

public class Main {
    public static void main(String[] args) {
        //java.util.function - пакет с предопределёнными функциональными интерфейсами
        //Predicate<T> - содержит абстрактный метод test  который должен принимать обьект T (любого типа) , что проверяет его возвращая true/false
        //Function <T , R> - содержит метод apply который должен принимать обьект T  , что то с ним делать (вычисления связанные с полями)
            // и возвращает обьект типа R
        //UnaryOperator<T> - то же что и Function  но всегда в apply принимает обьект T  и возвращает T
        //Consumer<T> - содержит метод accept который должен принимать обьект но ничего не возвращать
            // можно принимать если в методе нужно изменить поля обьекта либо информацию о нем отправить в поток вывода (вывести на консоль или в файл)
        //Supplier <T> - содержит метод get который ничего не принимает но в нутри себя должен создать обьект типа T из ограниченного набора значений
            // и его вернуть
    }

}
